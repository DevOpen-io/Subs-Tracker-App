name: Flutter APK Build and Release

on:
  pull_request:
    types: [closed]
    branches:
      - main
    

env:
  APP_NAME: subs_tracker

jobs:
  android-release-upload:
    runs-on: ubuntu-latest

    env:
      DISTRIBUTION_GROUPS: "YP-Android"
      RELEASE_NOTES: |
        ${{ github.event.pull_request.title }}

        ${{ github.event.pull_request.body }}
        release build from ${{ github.sha }}

    steps:
      # 1️⃣  Source
      - name: 📥 Check out code
        uses: actions/checkout@v4

      # 2️⃣  Flutter SDK (with built-in cache flag)
      - name: 🐦 Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      # 3️⃣  Cache Pub + Gradle to speed up CI
      - name: 🧹 Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}

      # 4️⃣  Firebase CLI (still needed for token flow)
      - name: 🛠️ Install Firebase CLI
        run: npm install -g firebase-tools@latest

      - name: 🔢 Parse pubspec version
        id: version
        run: |
          prefix=$(grep '^version:' pubspec.yaml | cut -d '+' -f 1 | awk '{print $2}')
          echo "VERSION_PREFIX=$prefix" >> $GITHUB_ENV

      # 5️⃣  Build release APK
      - name: 🏗️ Build Android release APK
        run: |
          flutter build apk --release --obfuscate \
            --build-name "$VERSION_PREFIX-${{ github.run_number }}" \
            --build-number "${{ github.run_number }}"

  github-release:
    needs: [android-release-upload]
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check out code
        uses: actions/checkout@v4
      - name: 🏷️ Create GitHub Release (APK & IPA)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "release-${{ github.run_number }}"
          name: "${{ github.event.pull_request.title }}"
          body: |
            ${{ github.event.pull_request.title }}

            ${{ github.event.pull_request.body }}
            release build from ${{ github.sha }}
          files: |
            build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
