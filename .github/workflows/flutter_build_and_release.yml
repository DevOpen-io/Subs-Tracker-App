name: Flutter APK Build and Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

env:
  APP_NAME: subs_tracker

jobs:
  android-release-upload:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    outputs:
      version_prefix: ${{ steps.version.outputs.version_prefix }}

    env:
      DISTRIBUTION_GROUPS: "YP-Android"
      RELEASE_NOTES: |
        ${{ github.event.pull_request.title }}

        ${{ github.event.pull_request.body }}
        release build from ${{ github.sha }}

    steps:
      # 1Ô∏è‚É£  Source
      - name: üì• Check out code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£  Flutter SDK (with built-in cache flag)
      - name: üê¶ Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      # 3Ô∏è‚É£  Cache Pub + Gradle to speed up CI
      - name: üßπ Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}

      - name: üî¢ Parse pubspec version
        id: version
        run: |
          prefix=$(grep '^version:' pubspec.yaml | cut -d '+' -f 1 | awk '{print $2}')
          echo "VERSION_PREFIX=$prefix" >> $GITHUB_ENV
          echo "version_prefix=$prefix" >> $GITHUB_OUTPUT

      - name: üì¶ Get Flutter dependencies
        run: flutter pub get
      
      - name: Run build runner
        run: dart run build_runner build --delete-conflicting-outputs

      # 5Ô∏è‚É£  Build release APK
      - name: üèóÔ∏è Build Android release APK
        run: |
          flutter build apk --release \
            --build-name "$VERSION_PREFIX-${{ github.run_number }}" \
            --build-number "${{ github.run_number }}"

      - name: üì§ Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk-release
          path: build/app/outputs/flutter-apk/app-release.apk

  github-release:
    needs: [android-release-upload]
    runs-on: ubuntu-latest
    
    # --- DEƒûƒ∞≈ûƒ∞KLƒ∞K BURADA ---
    # Bu i≈üin (job) release olu≈üturabilmesi i√ßin GITHUB_TOKEN'a yazma izni veriyoruz.
    permissions:
      contents: write

    steps:
      - name: üì• Check out code
        uses: actions/checkout@v4
      
      - name: üì• Download APK artifact
        uses: actions/download-artifact@v4 # download-artifact versiyonunu v4 olarak g√ºncelledim
        with:
          name: apk-release
          path: ./artifacts
      
      - name: üî¢ Get App Version and Build Number
        id: get_version
        run: |
          VERSION_LINE=$(grep "version:" pubspec.yaml)
          VERSION=$(echo $VERSION_LINE | cut -d' ' -f2 | cut -d'+' -f1)
          BUILD_NUMBER=${{ github.run_number }}
          
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
      
      - name: üè∑Ô∏è Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.APP_VERSION }}+${{ env.BUILD_NUMBER }}
          release_name: Release v${{ env.APP_VERSION }}+${{ env.BUILD_NUMBER }}
          body: |
            ${{ github.event.pull_request.title }}

            ${{ github.event.pull_request.body }}
            
            release build from ${{ github.sha }}
          draft: false
          prerelease: false
      
      - name: üì§ Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/app-release.apk
          asset_name: ${{ env.APP_NAME }}_${{ env.APP_VERSION }}+${{ env.BUILD_NUMBER }}.apk
          asset_content_type: application/zip
